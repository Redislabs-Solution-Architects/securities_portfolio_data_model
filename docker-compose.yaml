version: "3.9"
networks:
  portfolio-app:
    driver: bridge
services:
  server:
    image: "abhishekcoder/securities_portfolio_app:server"
    platform: linux/amd64
    env_file:
      - docker-compose-redis-variables.env
    depends_on:
      - redis
      - price_producer
      - deaggregator
    networks:
      - portfolio-app
    build: .
    ports:
      - "127.0.0.1:5555:5555"
    restart: always
      
  price_producer:
    image: "abhishekcoder/securities_portfolio_app:price_producer"
    platform: linux/amd64
    env_file:
      - docker-compose-redis-variables.env
    depends_on:
      - redis
    networks:
      - portfolio-app
    restart: on-failure

  deaggregator:
    image: "abhishekcoder/securities_portfolio_app:deaggregator"
    platform: linux/amd64
    env_file:
      - docker-compose-redis-variables.env
    depends_on:
      - redis
      - price_producer
    networks:
      - portfolio-app
    restart: on-failure

  tnx_generator:
    image: "abhishekcoder/securities_portfolio_app:generator"
    platform: linux/amd64
    env_file:
      - docker-compose-redis-variables.env
    depends_on:
      - redis
    networks:
      - portfolio-app
    restart: on-failure

  report:
    image: "abhishekcoder/securities_portfolio_app:report"
    platform: linux/amd64
    env_file:
      - docker-compose-redis-variables.env
    depends_on:
      - redis
    networks:
      - portfolio-app
    restart: on-failure

  redis:
    image: "redis/redis-stack:latest"
    env_file:
      - docker-compose-redis-variables.env
    command: /bin/sh -c "redis-stack-server --requirepass $$PASSWORD"
    ports:
      - "6379:6379"
    networks:
      - portfolio-app
    volumes:
      - redis_data:/data
    restart: on-failure

volumes:
  redis_data: